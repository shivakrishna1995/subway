/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MenuIndexRouteImport } from './routes/menu/index'
import { Route as LocationIndexRouteImport } from './routes/location/index'
import { Route as CartIndexRouteImport } from './routes/cart/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MenuIndexRoute = MenuIndexRouteImport.update({
  id: '/menu/',
  path: '/menu/',
  getParentRoute: () => rootRouteImport,
} as any)
const LocationIndexRoute = LocationIndexRouteImport.update({
  id: '/location/',
  path: '/location/',
  getParentRoute: () => rootRouteImport,
} as any)
const CartIndexRoute = CartIndexRouteImport.update({
  id: '/cart/',
  path: '/cart/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/cart': typeof CartIndexRoute
  '/location': typeof LocationIndexRoute
  '/menu': typeof MenuIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/cart': typeof CartIndexRoute
  '/location': typeof LocationIndexRoute
  '/menu': typeof MenuIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/cart/': typeof CartIndexRoute
  '/location/': typeof LocationIndexRoute
  '/menu/': typeof MenuIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/cart' | '/location' | '/menu'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/cart' | '/location' | '/menu'
  id: '__root__' | '/' | '/cart/' | '/location/' | '/menu/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CartIndexRoute: typeof CartIndexRoute
  LocationIndexRoute: typeof LocationIndexRoute
  MenuIndexRoute: typeof MenuIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/menu/': {
      id: '/menu/'
      path: '/menu'
      fullPath: '/menu'
      preLoaderRoute: typeof MenuIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/location/': {
      id: '/location/'
      path: '/location'
      fullPath: '/location'
      preLoaderRoute: typeof LocationIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cart/': {
      id: '/cart/'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CartIndexRoute: CartIndexRoute,
  LocationIndexRoute: LocationIndexRoute,
  MenuIndexRoute: MenuIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
